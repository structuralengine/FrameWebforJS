name: Codesign Windows App

on:
  push:
    tags:
      - v*

jobs:   
  release:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set environment.prod
        env:
          JSON_DECODE: ${{ secrets.environment_prod }}
        shell: pwsh
        run: |
          $encodedText = ${{ secrets.environment_prod }}
          Set-Content -Path "./src/environments/environment.prod.txt" -Value $encodedText 
          $decodedBytes = [System.Convert]::FromBase64String($encodedText)
          $decodedText = [System.Text.Encoding]::UTF8.GetString($decodedBytes)
          Set-Content -Path "./src/environments/environment.prod.ts" -Value $decodedText 
          
      - name: Set environment
        env:
          JSON_DECODE: ${{ secrets.environment }}
        shell: pwsh
        run: |
          $encodedText = ${{ secrets.environment }}
          Set-Content -Path "./src/environments/environment.txt" -Value $encodedText 
          $decodedBytes = [System.Convert]::FromBase64String($encodedText)
          $decodedText = [System.Text.Encoding]::UTF8.GetString($decodedBytes)
          Set-Content -Path "./src/environments/environment.ts" -Value $decodedText 
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "14.18.1"
          
      - name: Install dependencies
        run: npm install -g @angular/cli@12.2.7 && npm install

      - name: Build Windows app
        uses: samuelmeuli/action-electron-builder@v1.6.0
        with:
          build_script_name: "build:win"
          github_token: ${{ secrets.github_token }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
          windows_certs: ${{ secrets.CODESIGN }}
          windows_certs_password: ${{ secrets.PASSWORD }}
