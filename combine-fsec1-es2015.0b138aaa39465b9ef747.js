addEventListener("message",({data:t})=>{const o=t=>{let o=null;try{const f=t.toString().trim();f.length>0&&(s=+f,o=isNaN(s)?null:s)}catch(f){o=null}var s;return o},s=t.defList,f=t.combList,n=t.fsec,e=t.fsecKeys,c=[],m={};for(const i of Object.keys(s)){const t={};for(const o of s[i]){const s=Math.abs(o).toString(),f=Math.sign(o);if(!(s in n)){if(0!==o)continue;n[0]=Object.values(n)[0]}for(const m of e){const e={};let a;for(const t of n[s])t.m.length>0&&(a=t.m),e[a+"-"+t.l.toFixed(3)]={m:t.m,l:t.l,n:t.n,fx:f*t.fx,fy:f*t.fy,fz:f*t.fz,mx:f*t.mx,my:f*t.my,mz:f*t.mz,case:o};if(m in t){const o=m.split("_"),s=o[0],f=o[1];for(const n of Object.keys(t[m]))n in e?"max"===f?t[m][n][s]<e[n][s]&&(t[m][n]=e[n]):"min"===f&&t[m][n][s]>e[n][s]&&(t[m][n]=e[n]):c.push(n)}else t[m]=e}}m[i]=t}for(const i of Array.from(new Set(c)))for(const t of Object.keys(m))for(const o of m[t])for(const t of Object.keys(o))delete o[t][i];const a={},r={};for(const i of Object.keys(f)){const t={fx:0,fy:0,fz:0,mx:0,my:0,mz:0},s={};for(const n of f[i]){const f=Number(n.caseNo),c=n.caseNo.toString(),a=n.coef;if(!(c in m)||0===a)continue;const r=m[c];if(!(Object.keys(r).length<1)){Math.abs(f).toString().trim();for(const f of e){const n=[];for(const t of Object.keys(r[f])){const o=r[f][t],s=Math.sign(a)<0?-1:1*o.case;let e="";0!==s&&(e=(s<0?"-":"+")+s),n.push({m:o.m,l:o.l,n:o.n,fx:a*o.fx,fy:a*o.fy,fz:a*o.fz,mx:a*o.mx,my:a*o.my,mz:a*o.mz,case:e})}if(f in s)for(let t=0;t<n.length;t++){for(const e of Object.keys(n[t])){const c=n[t][e];"m"===e||"l"===e?s[f][t][e]=c:"n"===e?s[f][t][e]=null!==o(c)?c:"":s[f][t][e]+=c}s[f][t].comb=i}else{for(const t of n)t.comb=i;s[f]=n}for(const o of s[f])t.fx=Math.max(Math.abs(o.fx),t.fx),t.fy=Math.max(Math.abs(o.fy),t.fy),t.fz=Math.max(Math.abs(o.fz),t.fz),t.mx=Math.max(Math.abs(o.mx),t.mx),t.my=Math.max(Math.abs(o.my),t.my),t.mz=Math.max(Math.abs(o.mz),t.mz)}}}r[i]=s,a[i]=t}postMessage({fsecCombine:r,max_values:a})});