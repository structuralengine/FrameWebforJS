addEventListener("message",({data:m})=>{const x=m.pickList,a=m.disgCombine,_={};for(const d of Object.keys(x)){const m=x[d];let n=null;for(const x of m){const m=JSON.parse(JSON.stringify({temp:a[x]})).temp;if(null!=n)for(const x of Object.keys(m)){const a=x.split("_"),_=m[x],d=n[x];for(const s of Object.keys(d)){const r=d[s];if(!(s in _))continue;const t=_[s];"max"===a[1]?t[a[0]]>r[a[0]]&&(n[x][s]=m[x][s]):t[a[0]]<r[a[0]]&&(n[x][s]=m[x][s])}}else n=m}null!==n&&(_[d]=n)}const n={};for(const d of Object.keys(_)){const m=_[d],x=Object.keys(m),a={};for(const _ of x){const x=m[_];let n;_.includes("dx")?n="dx":_.includes("dy")?n="dy":_.includes("dz")?n="dz":_.includes("rx")?n="rx":_.includes("ry")?n="ry":_.includes("rz")&&(n="rz");let d=_.includes("max")?-65535:65535,s="0";if(_.includes("max"))for(const m of Object.keys(x)){const a=x[m][n];a>=d&&(d=a,s=m)}else for(const m of Object.keys(x)){const a=x[m][n];a<=d&&(d=a,s=m)}65535!==Math.abs(d)&&(a[_]={max:d,max_m:s})}if(0===Object.keys(a).length)continue;const s={max_d:Math.max(a.dx_max.max,a.dy_max.max,a.dz_max.max),min_d:Math.min(a.dx_min.max,a.dy_min.max,a.dz_min.max),max_r:Math.max(a.rx_max.max,a.ry_max.max,a.rz_max.max),min_r:Math.min(a.rx_min.max,a.ry_min.max,a.rz_min.max)};s.max_d===a.dx_max.max?s.max_d_m=a.dx_max.max_m:s.max_d===a.dy_max.max?s.max_d_m=a.dy_max.max_m:s.max_d===a.dz_max.max&&(s.max_d_m=a.dz_max.max_m),s.max_d===a.dx_max.max?s.min_d_m=a.dx_max.max_m:s.max_d===a.dy_max.max?s.min_d_m=a.dy_max.max_m:s.max_d===a.dz_max.max&&(s.min_d_m=a.dz_max.max_m),s.max_r===a.rx_max.max?s.max_r_m=a.rx_max.max_m:s.max_r===a.ry_max.max?s.max_r_m=a.ry_max.max_m:s.max_r===a.rz_max.max&&(s.max_r_m=a.rz_max.max_m),s.max_r===a.rx_max.max?s.min_r_m=a.rx_max.max_m:s.max_r===a.ry_max.max?s.min_r_m=a.ry_max.max_m:s.max_r===a.rz_max.max&&(s.min_r_m=a.rz_max.max_m),n[d]=s}postMessage({disgPickup:_,value_range:n})});