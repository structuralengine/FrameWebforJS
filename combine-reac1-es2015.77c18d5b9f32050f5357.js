addEventListener("message",({data:t})=>{const o=t.defList,s=t.combList,c=t.reac,e=t.reacKeys,n={};for(const i of Object.keys(o)){const t={};for(const s of o[i]){const o=Math.abs(s).toString(),n=Math.sign(s);if(!(o in c)){if(0!==s)continue;c[0]=Object.values(c)[0]}for(const f of e){const e={};for(const t of c[o])e[t.id]={tx:n*t.tx,ty:n*t.ty,tz:n*t.tz,mx:n*t.mx,my:n*t.my,mz:n*t.mz,case:s};if(f in t){const o=f.split("_"),s=o[0],c=o[1];for(const n of Object.keys(t[f]))"max"===c?t[f][n][s]<e[n][s]&&(t[f][n]=e[n]):"min"===c&&t[f][n][s]>e[n][s]&&(t[f][n]=e[n])}else t[f]=e}}n[i]=t}const f={};for(const i of Object.keys(s)){const t={};for(const o of s[i]){const s=Number(o.caseNo),c=o.caseNo.toString(),f=o.coef;if(!(c in n)||0===f)continue;const m=n[c];if(Object.keys(m).length<1)continue;const a=Math.abs(s).toString().trim();for(const o of e){const s={};for(const t of Object.keys(m[o])){const c=m[o][t],e=Math.sign(f)<0?-1:1*c.case;let n="";0!==e&&(n=(e<0?"-":"+")+a),s[t]={tx:f*c.tx,ty:f*c.ty,tz:f*c.tz,mx:f*c.mx,my:f*c.my,mz:f*c.mz,case:n}}if(o in t)for(const c of Object.keys(m[o])){c in t[o]||(t[o][c]={tx:0,ty:0,tz:0,mx:0,my:0,mz:0,case:""});for(const e of Object.keys(s[c]))t[o][c][e]+=s[c][e];t[o][c].comb=i}else{for(const t of Object.keys(s))s[t].comb=i;t[o]=s}}}f[i]=t}postMessage({reacCombine:f})});