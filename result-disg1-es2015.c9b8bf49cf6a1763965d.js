addEventListener("message",({data:t})=>{const e=t=>{let e=null;try{const s=t.toString().trim();s.length>0&&(n=+s,e=isNaN(n)?null:n)}catch(s){e=null}var n;return e},n=t.jsonData,s={},l={};let o=null;try{for(const t of Object.keys(n)){const o=new Array,a=n[t];if("object"!=typeof a||!("disg"in a))continue;const r=a.disg;let c=0,u=0;for(const t of Object.keys(r)){const n=t.replace("node","");if(n.includes("n")||n.includes("l"))continue;const s=r[t];let l=e(s.dx),a=e(s.dy),d=e(s.dz),i=e(s.rx),f=e(s.ry),y=e(s.rz);l=null==l?0:1e3*l,a=null==a?0:1e3*a,d=null==d?0:1e3*d,i=null==i?0:1e3*i,f=null==f?0:1e3*f,y=null==y?0:1e3*y,o.push({id:n,dx:l,dy:a,dz:d,rx:i,ry:f,rz:y});for(const t of[l,a,d])Math.abs(c)<Math.abs(t)&&(c=t);for(const t of[i,f,y])Math.abs(u)<Math.abs(t)&&(u=t)}const d=t.replace("Case","");s[d]=o,l[d]=Math.abs(c)}}catch(a){o=a}postMessage({disg:s,max_value:l,error:o})});